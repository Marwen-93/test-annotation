{"version":3,"sources":["../../../projects/ngx-annotate-text/src/lib/components/annotation/annotation.components.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-annotate-text/src/lib/models/annotation.model.ts","../../../projects/ngx-annotate-text/src/lib/components/ngx-annotate-text/ngx-annotate-text.component.ts","../../../projects/ngx-annotate-text/src/lib/ngx-annotate-text.module.ts"],"names":["this","removable","removeAnnotation","EventEmitter","Component","args","selector","template","Input","Output","Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","startIndex","endIndex","label","color","NgxAnnotateTextComponent","elementRef","annotations","annotationsChange","tokens","annotationStartingIndices","Map","prototype","ngOnInit","splitTextIntoTokens","ngOnChanges","changes","getCurrentTextSelection","updateTextSelection","undefined","selectionStart","selectionEnd","isAnnotation","annotation","Annotation","onRemoveAnnotation","filter","a","emit","window","getSelection","rangeCount","range","getRangeAt","preSelectionRange","cloneRange","selectNodeContents","nativeElement","setEnd","startContainer","startOffset","toString","_this","forEach","set","text","substring","currentIndex","isAnnotationActive","annotationActiveUntilIndex","buffer","split","char","has","get","ElementRef","NgModule","declarations","AnnotationComponent","imports","BrowserModule","exports"],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Annotation } from '../../models/annotation.model';\n\n@Component({\n  selector: 'ngx-annotation',\n  templateUrl: './annotation.component.html',\n  styleUrls: ['./annotation.component.css']\n})\nexport class AnnotationComponent {\n\n  @Input() annotation: Annotation;\n  @Input() removable = true;\n  @Output() removeAnnotation = new EventEmitter<Annotation>();\n\n  constructor() { }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ISelection } from './selection.model';\n\nexport interface IAnnotation {\n    text: string;\n    label: string;\n    color: string;\n}\n\nexport class Annotation implements IAnnotation, ISelection {\n    startIndex: number;\n    endIndex: number;\n    text: string;\n    label: string;\n    color: string;\n\n    /**\n     * Represents an annotated part of the referenced text.\n     *\n     * @param startIndex The zero-based index number indicating the beginning of this annotation.\n     * @param endIndex The zero-based index number indicating the end of the annotation. The annotation\n     * includes the characters up to, but not including, the character indicated by the end.\n     * @param label Arbitrary string displayed as label below the annotation, e. g. `City`.\n     * @param color The color of the box which is displayed around the annotation, e. g. 'red' or 'rgb(220, 53, 69)'.\n     */\n    constructor(startIndex: number, endIndex: number, label: string, color: string) {\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this.label = label;\n        this.color = color;\n    }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Annotation } from '../../models/annotation.model';\nimport { ISelection } from '../../models/selection.model';\n\n@Component({\n  selector: 'ngx-annotate-text',\n  templateUrl: './ngx-annotate-text.component.html',\n  styleUrls: ['./ngx-annotate-text.component.css']\n})\nexport class NgxAnnotateTextComponent implements OnInit, OnChanges {\n\n  /** Represents the parts of the given text which shall be annotated. */\n  @Input() annotations: Annotation[] = [];\n\n  /** An optional CSS class applied to all elements which wrap the annotated parts of the given text. */\n  @Input() annotationClass: string;\n\n  /**\n   * Determines whether annotations shall have a small button in the top right corner so that the user can\n   * remove an annotation.\n   */\n  @Input() removable = true;\n\n  /** The text which shall be displayed and annotated. */\n  @Input() text: string;\n\n  /** Emits the list of existing annotations after an element has been removed. */\n  @Output() annotationsChange: EventEmitter<Annotation[]> = new EventEmitter<Annotation[]>();\n\n  /** @internal */\n  tokens: any[] = [];\n  private selectionStart: number;\n  private selectionEnd: number;\n  private annotationStartingIndices: Map<number, Annotation> = new Map();\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit(): void {\n    this.splitTextIntoTokens();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('annotations' in changes || 'text' in changes) {\n      this.splitTextIntoTokens();\n    }\n  }\n\n  /**\n   * Returns the start index and end index of the currently selected text range. Returns `undefined`\n   * if no text is currently selected.\n   */\n  public getCurrentTextSelection(): ISelection {\n    this.updateTextSelection();\n\n    if (this.selectionStart === undefined || this.selectionEnd === undefined || this.selectionStart >= this.selectionEnd) {\n      return undefined;\n    }\n\n    return {\n      startIndex: this.selectionStart,\n      endIndex: this.selectionEnd,\n    };\n  }\n\n  /** @internal */\n  isAnnotation(annotation: Annotation | string): boolean {\n    return annotation instanceof Annotation;\n  }\n\n  /** @internal */\n  onRemoveAnnotation(annotation: Annotation): void {\n    this.annotations = this.annotations.filter(a => a !== annotation);\n    this.annotationsChange.emit(this.annotations);\n    this.splitTextIntoTokens();\n  }\n\n  private updateTextSelection(): void {\n    if (window.getSelection && window.getSelection().rangeCount > 0) {\n      const range = window.getSelection().getRangeAt(0);\n      const preSelectionRange = range.cloneRange();\n      preSelectionRange.selectNodeContents(this.elementRef.nativeElement);\n      preSelectionRange.setEnd(range.startContainer, range.startOffset);\n      this.selectionStart = [...preSelectionRange.toString()].length;\n      this.selectionEnd = this.selectionStart + [...range.toString()].length;\n    } else {\n      this.selectionStart = undefined;\n      this.selectionEnd = undefined;\n    }\n  }\n\n  private splitTextIntoTokens(): void {\n    this.tokens = [];\n    this.annotationStartingIndices = new Map();\n\n    // Creates a map which contains the starting indices for each annotation\n    // as keys. This way, we know the positions / indices in the text where\n    // we need to display an annotation instead of the plaintext.\n    this.annotations.forEach((a: Annotation) => {\n      this.annotationStartingIndices.set(a.startIndex, a);\n      a.text = this.text.substring(a.startIndex, a.endIndex);\n    });\n\n    let currentIndex = 0;\n    let isAnnotationActive = false;\n    let annotationActiveUntilIndex = 0;\n    let buffer = '';\n\n    this.text.split('').forEach((char: string) => {\n      if (annotationActiveUntilIndex === currentIndex) {\n        isAnnotationActive = false;\n      }\n\n      if (!this.annotationStartingIndices.has(currentIndex) && !isAnnotationActive) {\n        buffer += char;\n      } else if (this.annotationStartingIndices.has(currentIndex)) {\n        if (buffer.length > 0) {\n          this.tokens.push(buffer);\n        }\n        this.tokens.push(this.annotationStartingIndices.get(currentIndex));\n        annotationActiveUntilIndex = this.annotationStartingIndices.get(currentIndex).endIndex;\n        buffer = '';\n        isAnnotationActive = true;\n      }\n\n      currentIndex++;\n    });\n\n    if (buffer.length > 0) {\n      this.tokens.push(buffer);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AnnotationComponent } from './components/annotation/annotation.components';\nimport { NgxAnnotateTextComponent } from './components/ngx-annotate-text/ngx-annotate-text.component';\n\n@NgModule({\n  declarations: [\n    AnnotationComponent,\n    NgxAnnotateTextComponent,\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  exports: [NgxAnnotateTextComponent]\n})\nexport class NgxAnnotateTextModule { }\n"]}